{
	"title": "Navigation Bar Small Screen",
	"description":"The navigation bar will change into a dropdown menu when a certain threshold in viewport width is hit. To do this, we first get the dimensions of the webpage through the use of the \"window.addEventListener\" function with the target event of \"resize\".\n\nWe will then use the hook \"useEffect\" to trigger the function on every render of the webpage. Once we get the dimensions, we will then use it as a conditional so the react component could choose how to render the navigation bar. \n\nFor the dropdown menu, we will use the Dropdown component from the react-bootstrap which we can install through \"npm install react-bootstrap bootstrap\". \n\nThrough the use of the \"DropdownButton\" property \"title\" we can set the name of the menu while the \"size\" will let us set if the menu size is small \"sm\" or large \"lg\". The \"Dropdown.Item\" encapsulation will allow us to create each dropdown item with the corresponding \"img\", text and the event handler for \"onClick\".",
	"snippet":"import Dropdown from 'react-bootstrap/Dropdown';\n  import DropdownButton from 'react-bootstrap/DropdownButton';\n\nconst [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\nuseEffect(() => {\n    function handleResize() {\n    setWindowDimensions(getWindowDimensions()); }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n}, []);\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n\n    return {\n        width,\n        height\n    };\n}\n\nfunction useNavBar(){\n\tif(windowDimensions.width > 650){\n\t\treturn(\n\t\t   <Insert code for big viewport width>\n\t\t)\n\t}\n\telse{\n\t\treturn(\n\t\t\t<DropdownButton id=\"navDropdownBtn\" title=\"Menu\" size=\"lg\">\n\t\t\t\t<Dropdown.Item className=\"navDropItem\" onClick={() => handleClick(\"menuOne\")}>\n\t\t\t\t\t<img src={menuOneImg} className=\"navDropImg\"/> Menu One\n\t\t\t\t</Dropdown.Item>\n\t\t\t</DropdownButton> \n\t\t)\n\t}\n}\n"
}